generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum SubscriptionStatus {
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALING
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
  PAUSED
}

model User {
  id                String             @id @default(cuid())
  email             String             @unique
  passwordHash      String
  name              String?
  role              Role               @default(USER)
  emailVerifiedAt   DateTime?
  stripeCustomerId  String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  subscriptions     Subscription[]
  verificationTokens VerificationToken[]
}

model VerificationToken {
  id         String   @id @default(cuid())
  tokenHash  String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime @default(now())
}

model Subscription {
  id                    String              @id @default(cuid())
  userId                String
  user                  User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  stripeSubscriptionId  String              @unique
  priceId               String
  status                SubscriptionStatus
  currentPeriodEnd      DateTime?
  cancelAtPeriodEnd     Boolean             @default(false)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt

  @@index([userId])
}